<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itcast.actviti7demo.mapper.ActRuTaskMapper">
  <resultMap id="BaseResultMap" type="com.itcast.actviti7demo.model.ActRuTask">
    <id column="ID_" jdbcType="VARCHAR" property="id" />
    <result column="REV_" jdbcType="INTEGER" property="rev" />
    <result column="EXECUTION_ID_" jdbcType="VARCHAR" property="executionId" />
    <result column="PROC_INST_ID_" jdbcType="VARCHAR" property="procInstId" />
    <result column="PROC_DEF_ID_" jdbcType="VARCHAR" property="procDefId" />
    <result column="NAME_" jdbcType="VARCHAR" property="name" />
    <result column="PARENT_TASK_ID_" jdbcType="VARCHAR" property="parentTaskId" />
    <result column="DESCRIPTION_" jdbcType="VARCHAR" property="description" />
    <result column="TASK_DEF_KEY_" jdbcType="VARCHAR" property="taskDefKey" />
    <result column="OWNER_" jdbcType="VARCHAR" property="owner" />
    <result column="ASSIGNEE_" jdbcType="VARCHAR" property="assignee" />
    <result column="DELEGATION_" jdbcType="VARCHAR" property="delegation" />
    <result column="PRIORITY_" jdbcType="INTEGER" property="priority" />
    <result column="CREATE_TIME_" jdbcType="TIMESTAMP" property="createTime" />
    <result column="DUE_DATE_" jdbcType="TIMESTAMP" property="dueDate" />
    <result column="CATEGORY_" jdbcType="VARCHAR" property="category" />
    <result column="SUSPENSION_STATE_" jdbcType="INTEGER" property="suspensionState" />
    <result column="TENANT_ID_" jdbcType="VARCHAR" property="tenantId" />
    <result column="FORM_KEY_" jdbcType="VARCHAR" property="formKey" />
    <result column="CLAIM_TIME_" jdbcType="TIMESTAMP" property="claimTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID_, REV_, EXECUTION_ID_, PROC_INST_ID_, PROC_DEF_ID_, NAME_, PARENT_TASK_ID_, DESCRIPTION_, 
    TASK_DEF_KEY_, OWNER_, ASSIGNEE_, DELEGATION_, PRIORITY_, CREATE_TIME_, DUE_DATE_, 
    CATEGORY_, SUSPENSION_STATE_, TENANT_ID_, FORM_KEY_, CLAIM_TIME_
  </sql>

  <insert id="batchInsert" parameterType="java.util.List">
    <!--
      WARNING - @mbg.generated
      这个节点为代码生成工具生成，请不要修改!
      @author hewei
    -->
    insert into act_ru_task (ID_, REV_, EXECUTION_ID_, PROC_INST_ID_, PROC_DEF_ID_, NAME_, PARENT_TASK_ID_, DESCRIPTION_, TASK_DEF_KEY_, OWNER_, ASSIGNEE_, DELEGATION_, PRIORITY_, CREATE_TIME_, DUE_DATE_, CATEGORY_, SUSPENSION_STATE_, TENANT_ID_, FORM_KEY_, CLAIM_TIME_)
    values
    <foreach collection="list" item="item" separator=",">
       (#{item.id,jdbcType=VARCHAR}, #{item.rev,jdbcType=INTEGER}, #{item.executionId,jdbcType=VARCHAR}, #{item.procInstId,jdbcType=VARCHAR}, #{item.procDefId,jdbcType=VARCHAR}, #{item.name,jdbcType=VARCHAR}, #{item.parentTaskId,jdbcType=VARCHAR}, #{item.description,jdbcType=VARCHAR}, #{item.taskDefKey,jdbcType=VARCHAR}, #{item.owner,jdbcType=VARCHAR}, #{item.assignee,jdbcType=VARCHAR}, #{item.delegation,jdbcType=VARCHAR}, #{item.priority,jdbcType=INTEGER}, #{item.createTime,jdbcType=TIMESTAMP}, #{item.dueDate,jdbcType=TIMESTAMP}, #{item.category,jdbcType=VARCHAR}, #{item.suspensionState,jdbcType=INTEGER}, #{item.tenantId,jdbcType=VARCHAR}, #{item.formKey,jdbcType=VARCHAR}, #{item.claimTime,jdbcType=TIMESTAMP})
    </foreach>
  </insert>
  <select id="selectOneByExample" parameterType="com.itcast.actviti7demo.model.ActRuTaskExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      这个节点为代码生成工具生成，请不要修改!
      @author hewei
    -->
    select
    <include refid="Base_Column_List" />
    from act_ru_task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>

  <select id="selectByExample" parameterType="com.itcast.actviti7demo.model.ActRuTaskExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from act_ru_task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>